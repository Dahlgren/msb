#!/usr/bin/env node
var argv = require('minimist')(process.argv.slice(2), {
  alias: {
    t: 'topic'
  },
  boolean: ['pretty'],
  default: {
    pretty: true,
    follow: ['response']
  }
});

if (!argv.topic) {
  console.error('topic is required');
  process.exit(1);
}

var channelManager = require('..').channelManager;
var topics;

if (typeof argv.topic === 'string') {
  topics = argv.topic.split(',');
} else {
  topics = argv.topic;
}

topics.forEach(function(topic) {
  channelManager
  .createRawConsumer(topic, { groupId: false })
  .on('message', onMessage.bind(null, topic));
});

function onMessage(topic, message) {
  try {
    if (message.topics.response && eqOrIn(argv.follow, 'response')) {
      channelManager
      .findOrCreateConsumer(message.topics.response, { groupId: false })
      .on('message', onMessage.bind(null, topic));
    }
    message = JSON.stringify(message, null, (argv.pretty) ? '  ' : '');
  } catch(e) {
    console.error(topic, e, message);
    return;
  }
  console.log(message);
}

function eqOrIn(strOrArr, str) {
  return strOrArr && strOrArr === str || ~strOrArr.indexOf(str);
}
