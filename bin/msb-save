#!/usr/bin/env node
var argv = require('minimist')(process.argv.slice(2), {
  default: {
    by: 'topics.to',
    ext: 'json'
  }
});

var fs = require('fs');
var path = require('path');
var _ = require('lodash');

process
.stdin
.pipe(require('split')(JSON.parse))
.on('data', function(obj) {
  var filename = getNested(obj, argv.by) + '.' + argv.ext;
  fs.writeFileSync(path.join(argv._[0] || '.', filename), JSON.stringify(obj, null, '  '));
})
.on('error', console.error);

function getNested(obj, path, defaultValue) {
  var self = this;

  if (_.isUndefined(obj) || obj === null) return defaultValue;

  var fields = path.split('.');
  var result = obj;
  for (var i = 0, n = fields.length; i < n; i++) {
    if (!_.isObject(result) && !_.isArray(result)) {
      return (!_.isUndefined(defaultValue)) ? defaultValue : undefined;
    }
    result = result[fields[i]];
  }
  return (_.isUndefined(result) && !_.isUndefined(defaultValue)) ? defaultValue : result;
}
